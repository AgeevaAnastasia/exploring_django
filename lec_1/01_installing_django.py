"""Что такое Django?

Django - это высокоуровневый фреймворк для веб-приложений на языке
Python. Он был создан в 2005 году и с тех пор активно развивается и
обновляется сообществом разработчиков по всему миру.


Обзор фреймворка Django

Django предоставляет разработчикам множество инструментов и функций для
создания веб-приложений, таких как:
● ORM (Object-Relational Mapping) для работы с базами данных
● URL-маршрутизация
● Аутентификация и авторизация пользователей
● Шаблонизация
● Кеширование
● Интернационализация
● Административная панель

Преимущества использования Django
Использование Django имеет множество преимуществ, таких как:
● Быстрая разработка веб-приложений
● Простота и удобство использования
● Высокая производительность
● Безопасность
● Масштабируемость


История развития Django

Django был создан в 2005 году. Первый коммит в июле 2005, а версия 0.90 в
ноябре того же года. С тех пор Django активно развивается и обновляется
сообществом разработчиков по всему миру. В настоящее время он является
одним из самых популярных фреймворков для веб-разработки на языке Python.


История версий
Ниже представлена таблица с версиями Django и датой выхода релиза.
Версия Месяц и год релиза
0.90 ноябрь 2005
0.91 январь 2006
0.95 июль 2006
0.96 март 2007
1.0 сентябрь 2008
1.1 июль 2009
1.2 май 2010
1.3 март 2011
1.4 LTS март 2012
1.5 февраль 2013
1.6 ноябрь 2013
1.7 сентябрь 2014
1.8 LTS апрель 2015
1.9 декабрь 2015
1.10 август 2016
1.11 LTS апрель 2017
2.0 декабрь 2017
2.1 август 2018
2.2 LTS апрель 2019
3.0 декабрь 2019
3.1 август 2020
3.2 LTS апрель 2021
4.0 декабрь 2021
4.1 август 2022
4.2 LTS апрель 2023
5.0 декабрь 2023


Обратите внимание как долго Django был в нулевой и первой версии. С 2005 по
2014 год обновления выходили хаотично, по мере создания. С 2015 года
закрепились месяцы выхода обновлений: апрель, декабрь, август.

Начиная с версии 1.4, стали выходить LTS.

LTS (Long Time Support) — версия, с поддержкой в течение длительного
времени (3 года). LTS-версии стабильнее по сравнению с обычными, так как
при их выпуске разработчики стараются не экспериментировать со
всевозможными новинками.

В декабре 2017 года выходит Django 2.0. Он меняет подход к нумерации версий.
С тех пор это тройка x.0, x.1 и x.2. При этом версии x.2 выходят как LTS.

Важно! Даже если сейчас последняя версия имеет номер 5, это не значит, что
тот же Django 3.2 более не актуален и изучать его не стоит. Это
распространенная ошибка новичка. Большая часть материалов, изучаемых в
рамках курса появилась в первых версиях Django и сохраняет свою
актуальность до сих пор.


Концепция MVT

Концепция Модель-Представление-Шаблон (MVT) является основой
фреймворка Django. Она разделяет приложение на три основных компонента:
модель (Model), представление (View) и шаблон (Template).

Модель - это объект, который представляет данные в приложении и отвечает
за их хранение и манипуляцию. Модели Django обычно соответствуют таблицам
в базе данных.

Представление - это компонент, который отвечает за обработку запросов и
формирование ответов на основе данных из моделей. В Django представления
обычно реализуются в виде функций или классов.

Шаблон - это компонент, который отвечает за отображение данных на
странице. Шаблоны Django используют язык шаблонов, который позволяет
вставлять данные из моделей и представлений в HTML-код.


Отдельно стоит упомянуть маршруты. Маршруты в Django играют роль
посредника между пользователем и представлением. Они определяют, какой
URL-адрес должен быть связан с каким представлением. Когда пользователь
запрашивает URL-адрес, Django использует маршруты для определения
соответствующего представления и передачи запроса ему. Представление
обрабатывает запрос и формирует ответ, который затем возвращается
пользователю.


Установка и настройка Django

Python помогают решить проблему управления зависимостями проектов. Если
у вас есть несколько проектов на Python, то вероятность того, что вам придется
работать с разными версиями библиотек или самого Python, очень высока. Но
использование виртуальных сред позволяет создавать независимые группы
библиотек для каждого проекта, что предотвращает конфликты между
версиями и не дает одному проекту повлиять на другой. В Python уже есть

модуль venv для создания виртуальных сред, который можно использовать как
в разработке, так и в производстве.

Виртуальное окружение
Создаём виртуальное окружение в Linux или MacOS
mkdir project
cd project
python3 -m venv venv
Создаём виртуальное окружение в Linux или MacOS
mkdir project
cd project
python -m venv .venv

Далее активируем виртуальное окружение, чтобы все дальнейшие действия
выполнялись внутри него.

venv/bin/activate # Linux/MacOS
venv\Scripts\activate # Windows
venv\Scripts\activate.ps1 # Windows PowerShell


Установка Django и обязательный компонентов

Для установки Django рекомендуется использовать менеджер пакетов pip. Для
этого необходимо открыть терминал и выполнить команду:

pip install django

Помимо самого фреймворка будет установлено несколько обязательных
зависимостей. Впрочем сам Django содержит в себе около 15 пакетов,
позволяющих решать большинство задач разработки без установки
дополнительных пакетов и модулей.
"""